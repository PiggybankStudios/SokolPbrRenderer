#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --format=sokol_impl --errfmt=msvc --slang=hlsl5:glsl430:metal_macos --input=C:\\gamedev\\projects\\SokolPbrRenderer\\app\\pbr_shader.glsl --output=C:\\gamedev\\projects\\SokolPbrRenderer\\app\\pbr_shader.glsl.h

    Overview:
    =========
    Shader program: 'pbr':
        Get shader desc: pbr_shader_desc(sg_query_backend());
        Vertex Shader: vertex_shader
        Fragment Shader: fragment_shader
        Attributes:
            ATTR_pbr_position => 0
            ATTR_pbr_normal => 1
            ATTR_pbr_texCoord0 => 2
            ATTR_pbr_color0 => 3
    Bindings:
        Uniform block 'pbr_VertParams':
            C struct: pbr_VertParams_t
            Bind slot: UB_pbr_VertParams => 0
        Uniform block 'pbr_FragParams':
            C struct: pbr_FragParams_t
            Bind slot: UB_pbr_FragParams => 1
        Image 'pbrAlbedoTexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_pbrAlbedoTexture => 0
        Image 'pbrRoughnessTexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_pbrRoughnessTexture => 3
        Sampler 'pbrAlbedoSampler':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_pbrAlbedoSampler => 0
        Sampler 'pbrRoughnessSampler':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_pbrRoughnessSampler => 3
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before pbr_shader.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
const sg_shader_desc* pbr_shader_desc(sg_backend backend);
#define ATTR_pbr_position (0)
#define ATTR_pbr_normal (1)
#define ATTR_pbr_texCoord0 (2)
#define ATTR_pbr_color0 (3)
#define UB_pbr_VertParams (0)
#define UB_pbr_FragParams (1)
#define IMG_pbrAlbedoTexture (0)
#define IMG_pbrRoughnessTexture (3)
#define SMP_pbrAlbedoSampler (0)
#define SMP_pbrRoughnessSampler (3)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct pbr_VertParams_t {
    mat4 world;
    mat4 view;
    mat4 projection;
} pbr_VertParams_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct pbr_FragParams_t {
    v4r tint;
    v4r lightPos;
    v4r cameraPos;
} pbr_FragParams_t;
#pragma pack(pop)
#if defined(SOKOL_SHDC_IMPL)
/*
    #version 430

    uniform vec4 pbr_VertParams[12];
    layout(location = 0) in vec3 position;
    layout(location = 0) out vec3 fragPosition;
    layout(location = 1) out vec3 fragNormal;
    layout(location = 1) in vec3 normal;
    layout(location = 2) out vec2 fragSampleCoord;
    layout(location = 2) in vec2 texCoord0;
    layout(location = 3) out vec4 fragColor;
    layout(location = 3) in vec4 color0;

    void main()
    {
        mat4 _28 = mat4(pbr_VertParams[0], pbr_VertParams[1], pbr_VertParams[2], pbr_VertParams[3]);
        vec4 _38 = _28 * vec4(position, 1.0);
        gl_Position = mat4(pbr_VertParams[8], pbr_VertParams[9], pbr_VertParams[10], pbr_VertParams[11]) * (mat4(pbr_VertParams[4], pbr_VertParams[5], pbr_VertParams[6], pbr_VertParams[7]) * _38);
        fragPosition = _38.xyz;
        fragNormal = (_28 * vec4(normal, 0.0)).xyz;
        fragSampleCoord = texCoord0;
        fragColor = color0;
    }

*/
static const uint8_t vertex_shader_source_glsl430[858] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x62,0x72,0x5f,0x56,
    0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,
    0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,
    0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,
    0x43,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x32,
    0x38,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,
    0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x70,0x62,0x72,0x5f,
    0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x70,
    0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,
    0x2c,0x20,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x33,0x38,0x20,0x3d,0x20,0x5f,0x32,0x38,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x70,0x62,0x72,0x5f,0x56,0x65,
    0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x70,0x62,0x72,
    0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,
    0x20,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x70,0x62,0x72,
    0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,
    0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,
    0x5d,0x2c,0x20,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x36,0x5d,0x2c,0x20,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x33,0x38,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x5f,0x33,0x38,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x28,0x5f,
    0x32,0x38,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    uniform vec4 pbr_FragParams[3];
    layout(binding = 16) uniform sampler2D pbrAlbedoTexture_pbrAlbedoSampler;
    layout(binding = 17) uniform sampler2D pbrRoughnessTexture_pbrRoughnessSampler;

    layout(location = 2) in vec2 fragSampleCoord;
    layout(location = 1) in vec3 fragNormal;
    layout(location = 0) in vec3 fragPosition;
    layout(location = 0) out vec4 frag_color;
    layout(location = 3) in vec4 fragColor;

    vec4 toLinear(vec4 sRGB)
    {
        bvec4 _145 = lessThan(sRGB, vec4(0.040449999272823333740234375));
        vec4 _152 = pow((sRGB + vec4(0.054999999701976776123046875)) * vec4(0.947867333889007568359375), vec4(2.400000095367431640625));
        vec4 _155 = sRGB * vec4(0.077399380505084991455078125);
        return vec4(_145.x ? _155.x : _152.x, _145.y ? _155.y : _152.y, _145.z ? _155.z : _152.z, _145.w ? _155.w : _152.w);
    }

    float DistributionGGX(vec3 normal, vec3 halfVec, float roughness)
    {
        float _46 = max(dot(normal, halfVec), 0.0);
        float _59 = fma(_46 * _46, fma(roughness, roughness, -1.0), 1.0);
        return (roughness * roughness) / ((3.1415927410125732421875 * _59) * _59);
    }

    float GeometrySchlickGGX(float normalDotLightOrView, float roughness)
    {
        return normalDotLightOrView / fma(normalDotLightOrView, 1.0 - roughness, roughness);
    }

    float GeometrySmith(vec3 normal, vec3 viewDir, vec3 lightVec, float roughness)
    {
        float param = max(dot(normal, viewDir), 0.0);
        float param_1 = roughness;
        float param_2 = max(dot(normal, lightVec), 0.0);
        float param_3 = roughness;
        return GeometrySchlickGGX(param, param_1) * GeometrySchlickGGX(param_2, param_3);
    }

    vec4 fromLinear(vec4 linearRGB)
    {
        bvec4 _118 = lessThan(linearRGB, vec4(0.003130800090730190277099609375));
        vec4 _129 = fma(vec4(1.05499994754791259765625), pow(linearRGB, vec4(0.4166666567325592041015625)), vec4(-0.054999999701976776123046875));
        vec4 _134 = linearRGB * vec4(12.9200000762939453125);
        return vec4(_118.x ? _134.x : _129.x, _118.y ? _134.y : _129.y, _118.z ? _134.z : _129.z, _118.w ? _134.w : _129.w);
    }

    void main()
    {
        vec4 param = texture(pbrAlbedoTexture_pbrAlbedoSampler, fragSampleCoord);
        vec4 _208 = texture(pbrRoughnessTexture_pbrRoughnessSampler, fragSampleCoord);
        float _211 = _208.x;
        vec3 _216 = normalize(fragNormal);
        vec3 _230 = normalize(pbr_FragParams[1].xyz - fragPosition);
        vec3 param_1 = _216;
        vec3 param_2 = (_216 + _230) * vec3(0.5);
        float param_3 = _211;
        float _260 = _211 + 1.0;
        vec3 param_4 = _216;
        vec3 param_5 = normalize(pbr_FragParams[2].xyz - fragPosition);
        vec3 param_6 = _230;
        float param_7 = (_260 * _260) * 0.125;
        float _284 = DistributionGGX(param_1, param_2, param_3) + GeometrySmith(param_4, param_5, param_6, param_7);
        vec4 param_8 = fragColor;
        vec4 param_9 = pbr_FragParams[0];
        vec4 param_10 = ((toLinear(param_8) * toLinear(param)) * toLinear(param_9)) * vec4(_284, _284, _284, 1.0);
        frag_color = fromLinear(param_10);
    }

*/
static const uint8_t fragment_shader_source_glsl430[2958] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x62,0x72,0x5f,0x46,
    0x72,0x61,0x67,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,
    0x36,0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,0x6f,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,
    0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x37,0x29,0x20,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x70,
    0x62,0x72,0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x70,0x62,0x72,0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,
    0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x65,
    0x63,0x34,0x20,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x76,0x65,0x63,0x34,
    0x20,0x73,0x52,0x47,0x42,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x62,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x31,0x34,0x35,0x20,0x3d,0x20,0x6c,0x65,0x73,0x73,0x54,0x68,
    0x61,0x6e,0x28,0x73,0x52,0x47,0x42,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,
    0x30,0x34,0x30,0x34,0x34,0x39,0x39,0x39,0x39,0x32,0x37,0x32,0x38,0x32,0x33,0x33,
    0x33,0x33,0x37,0x34,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x32,0x20,0x3d,0x20,0x70,
    0x6f,0x77,0x28,0x28,0x73,0x52,0x47,0x42,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,
    0x36,0x37,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x29,0x29,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x39,0x34,0x37,0x38,0x36,0x37,0x33,
    0x33,0x33,0x38,0x38,0x39,0x30,0x30,0x37,0x35,0x36,0x38,0x33,0x35,0x39,0x33,0x37,
    0x35,0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x32,0x2e,0x34,0x30,0x30,0x30,0x30,
    0x30,0x30,0x39,0x35,0x33,0x36,0x37,0x34,0x33,0x31,0x36,0x34,0x30,0x36,0x32,0x35,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,
    0x35,0x20,0x3d,0x20,0x73,0x52,0x47,0x42,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x30,0x37,0x37,0x33,0x39,0x39,0x33,0x38,0x30,0x35,0x30,0x35,0x30,0x38,
    0x34,0x39,0x39,0x31,0x34,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,
    0x5f,0x31,0x34,0x35,0x2e,0x78,0x20,0x3f,0x20,0x5f,0x31,0x35,0x35,0x2e,0x78,0x20,
    0x3a,0x20,0x5f,0x31,0x35,0x32,0x2e,0x78,0x2c,0x20,0x5f,0x31,0x34,0x35,0x2e,0x79,
    0x20,0x3f,0x20,0x5f,0x31,0x35,0x35,0x2e,0x79,0x20,0x3a,0x20,0x5f,0x31,0x35,0x32,
    0x2e,0x79,0x2c,0x20,0x5f,0x31,0x34,0x35,0x2e,0x7a,0x20,0x3f,0x20,0x5f,0x31,0x35,
    0x35,0x2e,0x7a,0x20,0x3a,0x20,0x5f,0x31,0x35,0x32,0x2e,0x7a,0x2c,0x20,0x5f,0x31,
    0x34,0x35,0x2e,0x77,0x20,0x3f,0x20,0x5f,0x31,0x35,0x35,0x2e,0x77,0x20,0x3a,0x20,
    0x5f,0x31,0x35,0x32,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x44,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x47,0x47,
    0x58,0x28,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x20,0x68,0x61,0x6c,0x66,0x56,0x65,0x63,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,0x20,0x3d,0x20,
    0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x68,0x61,0x6c,0x66,0x56,0x65,0x63,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,
    0x66,0x6d,0x61,0x28,0x5f,0x34,0x36,0x20,0x2a,0x20,0x5f,0x34,0x36,0x2c,0x20,0x66,
    0x6d,0x61,0x28,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x28,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x20,0x2a,0x20,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x20,0x2f,0x20,0x28,0x28,0x33,0x2e,0x31,
    0x34,0x31,0x35,0x39,0x32,0x37,0x34,0x31,0x30,0x31,0x32,0x35,0x37,0x33,0x32,0x34,
    0x32,0x31,0x38,0x37,0x35,0x20,0x2a,0x20,0x5f,0x35,0x39,0x29,0x20,0x2a,0x20,0x5f,
    0x35,0x39,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x47,0x65,
    0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x44,0x6f,0x74,
    0x4c,0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,0x65,0x77,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x44,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,0x65,0x77,0x20,
    0x2f,0x20,0x66,0x6d,0x61,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x44,0x6f,0x74,0x4c,
    0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,0x65,0x77,0x2c,0x20,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x72,0x6f,0x75,
    0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x6d,0x69,0x74,0x68,0x28,
    0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x56,0x65,0x63,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,
    0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x56,0x65,0x63,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x47,0x65,0x6f,
    0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,
    0x2a,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,0x6c,0x69,0x63,
    0x6b,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,
    0x66,0x72,0x6f,0x6d,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x76,0x65,0x63,0x34,0x20,
    0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x62,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x31,0x38,0x20,0x3d,0x20,0x6c,0x65,
    0x73,0x73,0x54,0x68,0x61,0x6e,0x28,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,
    0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x30,0x33,0x31,0x33,0x30,0x38,
    0x30,0x30,0x30,0x39,0x30,0x37,0x33,0x30,0x31,0x39,0x30,0x32,0x37,0x37,0x30,0x39,
    0x39,0x36,0x30,0x39,0x33,0x37,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x31,0x32,0x39,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x76,
    0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x34,0x37,0x35,
    0x34,0x37,0x39,0x31,0x32,0x35,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x2c,0x20,
    0x70,0x6f,0x77,0x28,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x2c,0x20,0x76,
    0x65,0x63,0x34,0x28,0x30,0x2e,0x34,0x31,0x36,0x36,0x36,0x36,0x36,0x35,0x36,0x37,
    0x33,0x32,0x35,0x35,0x39,0x32,0x30,0x34,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,
    0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x2d,0x30,0x2e,0x30,0x35,0x34,0x39,0x39,
    0x39,0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,0x36,0x37,0x37,0x36,0x31,0x32,0x33,
    0x30,0x34,0x36,0x38,0x37,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x31,0x33,0x34,0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,
    0x52,0x47,0x42,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x32,0x2e,0x39,0x32,
    0x30,0x30,0x30,0x30,0x30,0x37,0x36,0x32,0x39,0x33,0x39,0x34,0x35,0x33,0x31,0x32,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x28,0x5f,0x31,0x31,0x38,0x2e,0x78,0x20,0x3f,0x20,0x5f,0x31,0x33,
    0x34,0x2e,0x78,0x20,0x3a,0x20,0x5f,0x31,0x32,0x39,0x2e,0x78,0x2c,0x20,0x5f,0x31,
    0x31,0x38,0x2e,0x79,0x20,0x3f,0x20,0x5f,0x31,0x33,0x34,0x2e,0x79,0x20,0x3a,0x20,
    0x5f,0x31,0x32,0x39,0x2e,0x79,0x2c,0x20,0x5f,0x31,0x31,0x38,0x2e,0x7a,0x20,0x3f,
    0x20,0x5f,0x31,0x33,0x34,0x2e,0x7a,0x20,0x3a,0x20,0x5f,0x31,0x32,0x39,0x2e,0x7a,
    0x2c,0x20,0x5f,0x31,0x31,0x38,0x2e,0x77,0x20,0x3f,0x20,0x5f,0x31,0x33,0x34,0x2e,
    0x77,0x20,0x3a,0x20,0x5f,0x31,0x32,0x39,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,0x6f,
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,
    0x6f,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x66,0x72,0x61,0x67,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x30,0x38,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x70,0x62,0x72,0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x70,0x62,0x72,0x52,0x6f,0x75,0x67,0x68,
    0x6e,0x65,0x73,0x73,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x66,0x72,0x61,
    0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x31,0x20,0x3d,0x20,
    0x5f,0x32,0x30,0x38,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x32,0x31,0x36,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x33,0x30,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x70,0x62,0x72,0x5f,0x46,0x72,0x61,
    0x67,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,
    0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x28,0x5f,0x32,0x31,
    0x36,0x20,0x2b,0x20,0x5f,0x32,0x33,0x30,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,
    0x28,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x32,0x31,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x30,0x20,
    0x3d,0x20,0x5f,0x32,0x31,0x31,0x20,0x2b,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,
    0x20,0x5f,0x32,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x70,0x62,0x72,0x5f,0x46,0x72,0x61,0x67,0x50,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x32,
    0x33,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x28,0x5f,0x32,0x36,0x30,0x20,0x2a,0x20,
    0x5f,0x32,0x36,0x30,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x32,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x38,0x34,0x20,0x3d,0x20,
    0x44,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x47,0x47,0x58,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x20,0x2b,0x20,0x47,0x65,0x6f,
    0x6d,0x65,0x74,0x72,0x79,0x53,0x6d,0x69,0x74,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,
    0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,
    0x20,0x70,0x62,0x72,0x5f,0x46,0x72,0x61,0x67,0x50,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x28,0x28,0x74,0x6f,0x4c,0x69,0x6e,0x65,
    0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x29,0x20,0x2a,0x20,0x74,0x6f,
    0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x29,0x20,0x2a,
    0x20,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x39,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x32,0x38,0x34,0x2c,
    0x20,0x5f,0x32,0x38,0x34,0x2c,0x20,0x5f,0x32,0x38,0x34,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x66,0x72,0x6f,0x6d,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer pbr_VertParams : register(b0)
    {
        row_major float4x4 _19_world : packoffset(c0);
        row_major float4x4 _19_view : packoffset(c4);
        row_major float4x4 _19_projection : packoffset(c8);
    };


    static float4 gl_Position;
    static float3 position;
    static float3 fragPosition;
    static float3 fragNormal;
    static float3 normal;
    static float2 fragSampleCoord;
    static float2 texCoord0;
    static float4 fragColor;
    static float4 color0;

    struct SPIRV_Cross_Input
    {
        float3 position : TEXCOORD0;
        float3 normal : TEXCOORD1;
        float2 texCoord0 : TEXCOORD2;
        float4 color0 : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        float3 fragPosition : TEXCOORD0;
        float3 fragNormal : TEXCOORD1;
        float2 fragSampleCoord : TEXCOORD2;
        float4 fragColor : TEXCOORD3;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        float4 _38 = mul(float4(position, 1.0f), _19_world);
        gl_Position = mul(mul(_38, _19_view), _19_projection);
        fragPosition = _38.xyz;
        fragNormal = mul(float4(normal, 0.0f), _19_world).xyz;
        fragSampleCoord = texCoord0;
        fragColor = color0;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        position = stage_input.position;
        normal = stage_input.normal;
        texCoord0 = stage_input.texCoord0;
        color0 = stage_input.color0;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.fragPosition = fragPosition;
        stage_output.fragNormal = fragNormal;
        stage_output.fragSampleCoord = fragSampleCoord;
        stage_output.fragColor = fragColor;
        return stage_output;
    }
*/
static const uint8_t vertex_shader_source_hlsl5[1596] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,
    0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,
    0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,
    0x31,0x39,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,
    0x34,0x20,0x5f,0x31,0x39,0x5f,0x76,0x69,0x65,0x77,0x20,0x3a,0x20,0x70,0x61,0x63,
    0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x78,0x34,0x20,0x5f,0x31,0x39,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x38,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,
    0x65,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x30,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,
    0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x30,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,
    0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,
    0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x6d,0x75,0x6c,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x31,0x39,0x5f,0x77,0x6f,0x72,
    0x6c,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x6d,0x75,0x6c,0x28,0x5f,
    0x33,0x38,0x2c,0x20,0x5f,0x31,0x39,0x5f,0x76,0x69,0x65,0x77,0x29,0x2c,0x20,0x5f,
    0x31,0x39,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x5f,0x33,0x38,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x75,0x6c,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x31,0x39,0x5f,0x77,0x6f,0x72,0x6c,0x64,
    0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x43,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x30,0x20,
    0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x74,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x30,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,
    0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,
    0x65,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    cbuffer pbr_FragParams : register(b0)
    {
        float4 _220_tint : packoffset(c0);
        float4 _220_lightPos : packoffset(c1);
        float4 _220_cameraPos : packoffset(c2);
    };

    Texture2D<float4> pbrAlbedoTexture : register(t0);
    SamplerState pbrAlbedoSampler : register(s0);
    Texture2D<float4> pbrRoughnessTexture : register(t1);
    SamplerState pbrRoughnessSampler : register(s1);

    static float2 fragSampleCoord;
    static float3 fragNormal;
    static float3 fragPosition;
    static float4 frag_color;
    static float4 fragColor;

    struct SPIRV_Cross_Input
    {
        float3 fragPosition : TEXCOORD0;
        float3 fragNormal : TEXCOORD1;
        float2 fragSampleCoord : TEXCOORD2;
        float4 fragColor : TEXCOORD3;
    };

    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };

    float4 toLinear(float4 sRGB)
    {
        bool4 _145 = bool4(sRGB.x < 0.040449999272823333740234375f.xxxx.x, sRGB.y < 0.040449999272823333740234375f.xxxx.y, sRGB.z < 0.040449999272823333740234375f.xxxx.z, sRGB.w < 0.040449999272823333740234375f.xxxx.w);
        float4 _152 = pow((sRGB + 0.054999999701976776123046875f.xxxx) * 0.947867333889007568359375f.xxxx, 2.400000095367431640625f.xxxx);
        float4 _155 = sRGB * 0.077399380505084991455078125f.xxxx;
        return float4(_145.x ? _155.x : _152.x, _145.y ? _155.y : _152.y, _145.z ? _155.z : _152.z, _145.w ? _155.w : _152.w);
    }

    float DistributionGGX(float3 normal, float3 halfVec, float roughness)
    {
        float _46 = max(dot(normal, halfVec), 0.0f);
        float _59 = mad(_46 * _46, mad(roughness, roughness, -1.0f), 1.0f);
        return (roughness * roughness) / ((3.1415927410125732421875f * _59) * _59);
    }

    float GeometrySchlickGGX(float normalDotLightOrView, float roughness)
    {
        return normalDotLightOrView / mad(normalDotLightOrView, 1.0f - roughness, roughness);
    }

    float GeometrySmith(float3 normal, float3 viewDir, float3 lightVec, float roughness)
    {
        float param = max(dot(normal, viewDir), 0.0f);
        float param_1 = roughness;
        float param_2 = max(dot(normal, lightVec), 0.0f);
        float param_3 = roughness;
        return GeometrySchlickGGX(param, param_1) * GeometrySchlickGGX(param_2, param_3);
    }

    float4 fromLinear(float4 linearRGB)
    {
        bool4 _118 = bool4(linearRGB.x < 0.003130800090730190277099609375f.xxxx.x, linearRGB.y < 0.003130800090730190277099609375f.xxxx.y, linearRGB.z < 0.003130800090730190277099609375f.xxxx.z, linearRGB.w < 0.003130800090730190277099609375f.xxxx.w);
        float4 _129 = mad(1.05499994754791259765625f.xxxx, pow(linearRGB, 0.4166666567325592041015625f.xxxx), (-0.054999999701976776123046875f).xxxx);
        float4 _134 = linearRGB * 12.9200000762939453125f.xxxx;
        return float4(_118.x ? _134.x : _129.x, _118.y ? _134.y : _129.y, _118.z ? _134.z : _129.z, _118.w ? _134.w : _129.w);
    }

    void frag_main()
    {
        float4 param = pbrAlbedoTexture.Sample(pbrAlbedoSampler, fragSampleCoord);
        float4 _208 = pbrRoughnessTexture.Sample(pbrRoughnessSampler, fragSampleCoord);
        float _211 = _208.x;
        float3 _216 = normalize(fragNormal);
        float3 _230 = normalize(_220_lightPos.xyz - fragPosition);
        float3 param_1 = _216;
        float3 param_2 = (_216 + _230) * 0.5f.xxx;
        float param_3 = _211;
        float _260 = _211 + 1.0f;
        float3 param_4 = _216;
        float3 param_5 = normalize(_220_cameraPos.xyz - fragPosition);
        float3 param_6 = _230;
        float param_7 = (_260 * _260) * 0.125f;
        float _284 = DistributionGGX(param_1, param_2, param_3) + GeometrySmith(param_4, param_5, param_6, param_7);
        float4 param_8 = fragColor;
        float4 param_9 = _220_tint;
        float4 param_10 = ((toLinear(param_8) * toLinear(param)) * toLinear(param_9)) * float4(_284, _284, _284, 1.0f);
        frag_color = fromLinear(param_10);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        fragSampleCoord = stage_input.fragSampleCoord;
        fragNormal = stage_input.fragNormal;
        fragPosition = stage_input.fragPosition;
        fragColor = stage_input.fragColor;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const uint8_t fragment_shader_source_hlsl5[4024] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x70,0x62,0x72,0x5f,0x46,0x72,0x61,0x67,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,
    0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x32,0x32,0x30,0x5f,0x74,0x69,0x6e,0x74,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x32,0x30,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x32,0x30,0x5f,0x63,0x61,0x6d,0x65,0x72,0x61,
    0x50,0x6f,0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x32,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,
    0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x70,0x62,0x72,0x41,
    0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x20,0x3a,0x20,0x72,
    0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x70,0x62,0x72,0x41,0x6c,0x62,
    0x65,0x64,0x6f,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x3a,0x20,0x72,0x65,0x67,
    0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x54,0x65,0x78,0x74,0x75,
    0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x70,0x62,0x72,
    0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x31,0x29,0x3b,
    0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x70,0x62,
    0x72,0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x31,0x29,
    0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,
    0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,
    0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,0x61,0x67,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x33,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,
    0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x52,0x47,0x42,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x34,0x20,0x5f,0x31,0x34,0x35,0x20,0x3d,
    0x20,0x62,0x6f,0x6f,0x6c,0x34,0x28,0x73,0x52,0x47,0x42,0x2e,0x78,0x20,0x3c,0x20,
    0x30,0x2e,0x30,0x34,0x30,0x34,0x34,0x39,0x39,0x39,0x39,0x32,0x37,0x32,0x38,0x32,
    0x33,0x33,0x33,0x33,0x37,0x34,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x66,0x2e,0x78,
    0x78,0x78,0x78,0x2e,0x78,0x2c,0x20,0x73,0x52,0x47,0x42,0x2e,0x79,0x20,0x3c,0x20,
    0x30,0x2e,0x30,0x34,0x30,0x34,0x34,0x39,0x39,0x39,0x39,0x32,0x37,0x32,0x38,0x32,
    0x33,0x33,0x33,0x33,0x37,0x34,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x66,0x2e,0x78,
    0x78,0x78,0x78,0x2e,0x79,0x2c,0x20,0x73,0x52,0x47,0x42,0x2e,0x7a,0x20,0x3c,0x20,
    0x30,0x2e,0x30,0x34,0x30,0x34,0x34,0x39,0x39,0x39,0x39,0x32,0x37,0x32,0x38,0x32,
    0x33,0x33,0x33,0x33,0x37,0x34,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x66,0x2e,0x78,
    0x78,0x78,0x78,0x2e,0x7a,0x2c,0x20,0x73,0x52,0x47,0x42,0x2e,0x77,0x20,0x3c,0x20,
    0x30,0x2e,0x30,0x34,0x30,0x34,0x34,0x39,0x39,0x39,0x39,0x32,0x37,0x32,0x38,0x32,
    0x33,0x33,0x33,0x33,0x37,0x34,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x66,0x2e,0x78,
    0x78,0x78,0x78,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x31,0x35,0x32,0x20,0x3d,0x20,0x70,0x6f,0x77,0x28,0x28,0x73,
    0x52,0x47,0x42,0x20,0x2b,0x20,0x30,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x39,
    0x39,0x37,0x30,0x31,0x39,0x37,0x36,0x37,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,
    0x38,0x37,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,0x29,0x20,0x2a,0x20,0x30,0x2e,0x39,
    0x34,0x37,0x38,0x36,0x37,0x33,0x33,0x33,0x38,0x38,0x39,0x30,0x30,0x37,0x35,0x36,
    0x38,0x33,0x35,0x39,0x33,0x37,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,0x2c,0x20,0x32,
    0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x39,0x35,0x33,0x36,0x37,0x34,0x33,0x31,
    0x36,0x34,0x30,0x36,0x32,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x35,0x35,0x20,0x3d,
    0x20,0x73,0x52,0x47,0x42,0x20,0x2a,0x20,0x30,0x2e,0x30,0x37,0x37,0x33,0x39,0x39,
    0x33,0x38,0x30,0x35,0x30,0x35,0x30,0x38,0x34,0x39,0x39,0x31,0x34,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,
    0x31,0x34,0x35,0x2e,0x78,0x20,0x3f,0x20,0x5f,0x31,0x35,0x35,0x2e,0x78,0x20,0x3a,
    0x20,0x5f,0x31,0x35,0x32,0x2e,0x78,0x2c,0x20,0x5f,0x31,0x34,0x35,0x2e,0x79,0x20,
    0x3f,0x20,0x5f,0x31,0x35,0x35,0x2e,0x79,0x20,0x3a,0x20,0x5f,0x31,0x35,0x32,0x2e,
    0x79,0x2c,0x20,0x5f,0x31,0x34,0x35,0x2e,0x7a,0x20,0x3f,0x20,0x5f,0x31,0x35,0x35,
    0x2e,0x7a,0x20,0x3a,0x20,0x5f,0x31,0x35,0x32,0x2e,0x7a,0x2c,0x20,0x5f,0x31,0x34,
    0x35,0x2e,0x77,0x20,0x3f,0x20,0x5f,0x31,0x35,0x35,0x2e,0x77,0x20,0x3a,0x20,0x5f,
    0x31,0x35,0x32,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x44,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x47,0x47,0x58,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x68,0x61,0x6c,0x66,0x56,0x65,0x63,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,
    0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x2c,0x20,0x68,0x61,0x6c,0x66,0x56,0x65,0x63,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,
    0x39,0x20,0x3d,0x20,0x6d,0x61,0x64,0x28,0x5f,0x34,0x36,0x20,0x2a,0x20,0x5f,0x34,
    0x36,0x2c,0x20,0x6d,0x61,0x64,0x28,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,
    0x2c,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x2d,0x31,0x2e,
    0x30,0x66,0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,
    0x73,0x20,0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x20,0x2f,
    0x20,0x28,0x28,0x33,0x2e,0x31,0x34,0x31,0x35,0x39,0x32,0x37,0x34,0x31,0x30,0x31,
    0x32,0x35,0x37,0x33,0x32,0x34,0x32,0x31,0x38,0x37,0x35,0x66,0x20,0x2a,0x20,0x5f,
    0x35,0x39,0x29,0x20,0x2a,0x20,0x5f,0x35,0x39,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,
    0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x44,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,
    0x65,0x77,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,
    0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x44,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,
    0x4f,0x72,0x56,0x69,0x65,0x77,0x20,0x2f,0x20,0x6d,0x61,0x64,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x44,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,0x65,
    0x77,0x2c,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,
    0x65,0x73,0x73,0x2c,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,
    0x72,0x79,0x53,0x6d,0x69,0x74,0x68,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x69,
    0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x56,0x65,0x63,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x6d,0x61,0x78,
    0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x69,0x65,
    0x77,0x44,0x69,0x72,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,
    0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x56,0x65,0x63,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x47,0x65,0x6f,
    0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,
    0x2a,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,0x6c,0x69,0x63,
    0x6b,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x66,0x72,0x6f,0x6d,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x34,0x20,0x5f,0x31,0x31,0x38,0x20,
    0x3d,0x20,0x62,0x6f,0x6f,0x6c,0x34,0x28,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,
    0x42,0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x30,0x33,0x31,0x33,0x30,0x38,0x30,
    0x30,0x30,0x39,0x30,0x37,0x33,0x30,0x31,0x39,0x30,0x32,0x37,0x37,0x30,0x39,0x39,
    0x36,0x30,0x39,0x33,0x37,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,0x2e,0x78,0x2c,0x20,
    0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,
    0x30,0x30,0x33,0x31,0x33,0x30,0x38,0x30,0x30,0x30,0x39,0x30,0x37,0x33,0x30,0x31,
    0x39,0x30,0x32,0x37,0x37,0x30,0x39,0x39,0x36,0x30,0x39,0x33,0x37,0x35,0x66,0x2e,
    0x78,0x78,0x78,0x78,0x2e,0x79,0x2c,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,
    0x42,0x2e,0x7a,0x20,0x3c,0x20,0x30,0x2e,0x30,0x30,0x33,0x31,0x33,0x30,0x38,0x30,
    0x30,0x30,0x39,0x30,0x37,0x33,0x30,0x31,0x39,0x30,0x32,0x37,0x37,0x30,0x39,0x39,
    0x36,0x30,0x39,0x33,0x37,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,0x2e,0x7a,0x2c,0x20,
    0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x2e,0x77,0x20,0x3c,0x20,0x30,0x2e,
    0x30,0x30,0x33,0x31,0x33,0x30,0x38,0x30,0x30,0x30,0x39,0x30,0x37,0x33,0x30,0x31,
    0x39,0x30,0x32,0x37,0x37,0x30,0x39,0x39,0x36,0x30,0x39,0x33,0x37,0x35,0x66,0x2e,
    0x78,0x78,0x78,0x78,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x31,0x32,0x39,0x20,0x3d,0x20,0x6d,0x61,0x64,0x28,0x31,
    0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x34,0x37,0x35,0x34,0x37,0x39,0x31,0x32,
    0x35,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,0x2c,0x20,
    0x70,0x6f,0x77,0x28,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x2c,0x20,0x30,
    0x2e,0x34,0x31,0x36,0x36,0x36,0x36,0x36,0x35,0x36,0x37,0x33,0x32,0x35,0x35,0x39,
    0x32,0x30,0x34,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x66,0x2e,0x78,0x78,0x78,0x78,
    0x29,0x2c,0x20,0x28,0x2d,0x30,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x39,0x39,
    0x37,0x30,0x31,0x39,0x37,0x36,0x37,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,0x38,
    0x37,0x35,0x66,0x29,0x2e,0x78,0x78,0x78,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x33,0x34,0x20,0x3d,0x20,0x6c,0x69,
    0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x20,0x2a,0x20,0x31,0x32,0x2e,0x39,0x32,0x30,
    0x30,0x30,0x30,0x30,0x37,0x36,0x32,0x39,0x33,0x39,0x34,0x35,0x33,0x31,0x32,0x35,
    0x66,0x2e,0x78,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x31,0x31,0x38,0x2e,0x78,
    0x20,0x3f,0x20,0x5f,0x31,0x33,0x34,0x2e,0x78,0x20,0x3a,0x20,0x5f,0x31,0x32,0x39,
    0x2e,0x78,0x2c,0x20,0x5f,0x31,0x31,0x38,0x2e,0x79,0x20,0x3f,0x20,0x5f,0x31,0x33,
    0x34,0x2e,0x79,0x20,0x3a,0x20,0x5f,0x31,0x32,0x39,0x2e,0x79,0x2c,0x20,0x5f,0x31,
    0x31,0x38,0x2e,0x7a,0x20,0x3f,0x20,0x5f,0x31,0x33,0x34,0x2e,0x7a,0x20,0x3a,0x20,
    0x5f,0x31,0x32,0x39,0x2e,0x7a,0x2c,0x20,0x5f,0x31,0x31,0x38,0x2e,0x77,0x20,0x3f,
    0x20,0x5f,0x31,0x33,0x34,0x2e,0x77,0x20,0x3a,0x20,0x5f,0x31,0x32,0x39,0x2e,0x77,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x70,0x62,0x72,0x41,
    0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x53,0x61,0x6d,
    0x70,0x6c,0x65,0x28,0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,0x6f,0x53,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x2c,0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x32,0x30,0x38,0x20,0x3d,0x20,0x70,0x62,0x72,0x52,0x6f,0x75,
    0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x28,0x70,0x62,0x72,0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,
    0x73,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x66,0x72,0x61,0x67,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x31,0x20,0x3d,0x20,0x5f,0x32,0x30,
    0x38,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x5f,0x32,0x31,0x36,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x33,0x30,0x20,0x3d,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x32,0x30,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x66,0x72,
    0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,
    0x3d,0x20,0x5f,0x32,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x28,0x5f,0x32,
    0x31,0x36,0x20,0x2b,0x20,0x5f,0x32,0x33,0x30,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,
    0x66,0x2e,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x32,0x31,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x30,0x20,
    0x3d,0x20,0x5f,0x32,0x31,0x31,0x20,0x2b,0x20,0x31,0x2e,0x30,0x66,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x34,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x32,0x30,0x5f,0x63,0x61,
    0x6d,0x65,0x72,0x61,0x50,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x66,0x72,
    0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,
    0x3d,0x20,0x5f,0x32,0x33,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x28,0x5f,0x32,0x36,
    0x30,0x20,0x2a,0x20,0x5f,0x32,0x36,0x30,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x32,
    0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x38,0x34,0x20,0x3d,0x20,0x44,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,
    0x6e,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x20,
    0x2b,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x6d,0x69,0x74,0x68,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x32,0x32,0x30,0x5f,0x74,
    0x69,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x28,0x28,0x74,0x6f,0x4c,
    0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x29,0x20,0x2a,
    0x20,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,
    0x29,0x20,0x2a,0x20,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x39,0x29,0x29,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x5f,0x32,0x38,0x34,0x2c,0x20,0x5f,0x32,0x38,0x34,0x2c,0x20,0x5f,0x32,0x38,0x34,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x6f,0x6d,0x4c,0x69,
    0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x20,
    0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x72,
    0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x2e,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,
    0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct pbr_VertParams
    {
        float4x4 world;
        float4x4 view;
        float4x4 projection;
    };

    struct main0_out
    {
        float3 fragPosition [[user(locn0)]];
        float3 fragNormal [[user(locn1)]];
        float2 fragSampleCoord [[user(locn2)]];
        float4 fragColor [[user(locn3)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float3 position [[attribute(0)]];
        float3 normal [[attribute(1)]];
        float2 texCoord0 [[attribute(2)]];
        float4 color0 [[attribute(3)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant pbr_VertParams& _19 [[buffer(0)]])
    {
        main0_out out = {};
        float4 _38 = _19.world * float4(in.position, 1.0);
        out.gl_Position = _19.projection * (_19.view * _38);
        out.fragPosition = _38.xyz;
        out.fragNormal = (_19.world * float4(in.normal, 0.0)).xyz;
        out.fragSampleCoord = in.texCoord0;
        out.fragColor = in.color0;
        return out;
    }

*/
static const uint8_t vertex_shader_source_metal_macos[974] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,
    0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x77,0x6f,0x72,
    0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x76,0x69,0x65,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,
    0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,
    0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,
    0x6f,0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,
    0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x32,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,
    0x74,0x65,0x28,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,
    0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,
    0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x70,0x62,0x72,0x5f,0x56,0x65,0x72,0x74,0x50,
    0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,
    0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x33,0x38,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x20,0x2a,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x5f,0x31,0x39,0x2e,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,
    0x2a,0x20,0x28,0x5f,0x31,0x39,0x2e,0x76,0x69,0x65,0x77,0x20,0x2a,0x20,0x5f,0x33,
    0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x33,0x38,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x28,0x5f,0x31,0x39,0x2e,0x77,0x6f,
    0x72,0x6c,0x64,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x69,0x6e,0x2e,
    0x74,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x69,
    0x6e,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct pbr_FragParams
    {
        float4 tint;
        float4 lightPos;
        float4 cameraPos;
    };

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float3 fragPosition [[user(locn0)]];
        float3 fragNormal [[user(locn1)]];
        float2 fragSampleCoord [[user(locn2)]];
        float4 fragColor [[user(locn3)]];
    };

    static inline __attribute__((always_inline))
    float4 toLinear(thread const float4& sRGB)
    {
        return select(pow((sRGB + float4(0.054999999701976776123046875)) * float4(0.947867333889007568359375), float4(2.400000095367431640625)), sRGB * float4(0.077399380505084991455078125), sRGB < float4(0.040449999272823333740234375));
    }

    static inline __attribute__((always_inline))
    float DistributionGGX(thread const float3& normal, thread const float3& halfVec, thread const float& roughness)
    {
        float _46 = fast::max(dot(normal, halfVec), 0.0);
        float _59 = fma(_46 * _46, fma(roughness, roughness, -1.0), 1.0);
        return (roughness * roughness) / ((3.1415927410125732421875 * _59) * _59);
    }

    static inline __attribute__((always_inline))
    float GeometrySchlickGGX(thread const float& normalDotLightOrView, thread const float& roughness)
    {
        return normalDotLightOrView / fma(normalDotLightOrView, 1.0 - roughness, roughness);
    }

    static inline __attribute__((always_inline))
    float GeometrySmith(thread const float3& normal, thread const float3& viewDir, thread const float3& lightVec, thread const float& roughness)
    {
        float param = fast::max(dot(normal, viewDir), 0.0);
        float param_1 = roughness;
        float param_2 = fast::max(dot(normal, lightVec), 0.0);
        float param_3 = roughness;
        return GeometrySchlickGGX(param, param_1) * GeometrySchlickGGX(param_2, param_3);
    }

    static inline __attribute__((always_inline))
    float4 fromLinear(thread const float4& linearRGB)
    {
        return select(fma(float4(1.05499994754791259765625), pow(linearRGB, float4(0.4166666567325592041015625)), float4(-0.054999999701976776123046875)), linearRGB * float4(12.9200000762939453125), linearRGB < float4(0.003130800090730190277099609375));
    }

    fragment main0_out main0(main0_in in [[stage_in]], constant pbr_FragParams& _220 [[buffer(0)]], texture2d<float> pbrAlbedoTexture [[texture(0)]], texture2d<float> pbrRoughnessTexture [[texture(1)]], sampler pbrAlbedoSampler [[sampler(0)]], sampler pbrRoughnessSampler [[sampler(1)]])
    {
        main0_out out = {};
        float4 param = pbrAlbedoTexture.sample(pbrAlbedoSampler, in.fragSampleCoord);
        float4 _208 = pbrRoughnessTexture.sample(pbrRoughnessSampler, in.fragSampleCoord);
        float _211 = _208.x;
        float3 _216 = fast::normalize(in.fragNormal);
        float3 _230 = fast::normalize(_220.lightPos.xyz - in.fragPosition);
        float3 param_1 = _216;
        float3 param_2 = (_216 + _230) * float3(0.5);
        float param_3 = _211;
        float _260 = _211 + 1.0;
        float3 param_4 = _216;
        float3 param_5 = fast::normalize(_220.cameraPos.xyz - in.fragPosition);
        float3 param_6 = _230;
        float param_7 = (_260 * _260) * 0.125;
        float _284 = DistributionGGX(param_1, param_2, param_3) + GeometrySmith(param_4, param_5, param_6, param_7);
        float4 param_8 = in.fragColor;
        float4 param_9 = _220.tint;
        float4 param_10 = ((toLinear(param_8) * toLinear(param)) * toLinear(param_9)) * float4(_284, _284, _284, 1.0);
        out.frag_color = fromLinear(param_10);
        return out;
    }

*/
static const uint8_t fragment_shader_source_metal_macos[3482] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x62,0x72,0x5f,0x46,0x72,0x61,0x67,
    0x50,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x74,0x69,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x61,0x6d,0x65,0x72,0x61,
    0x50,0x6f,0x73,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,
    0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,
    0x63,0x6e,0x33,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,
    0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,
    0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x73,0x52,
    0x47,0x42,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x73,0x65,0x6c,0x65,0x63,0x74,0x28,0x70,0x6f,0x77,0x28,0x28,0x73,0x52,0x47,
    0x42,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,0x2e,0x30,0x35,0x34,
    0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,0x36,0x37,0x37,0x36,0x31,
    0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x30,0x2e,0x39,0x34,0x37,0x38,0x36,0x37,0x33,0x33,0x33,0x38,
    0x38,0x39,0x30,0x30,0x37,0x35,0x36,0x38,0x33,0x35,0x39,0x33,0x37,0x35,0x29,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x32,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,
    0x30,0x39,0x35,0x33,0x36,0x37,0x34,0x33,0x31,0x36,0x34,0x30,0x36,0x32,0x35,0x29,
    0x29,0x2c,0x20,0x73,0x52,0x47,0x42,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x30,0x2e,0x30,0x37,0x37,0x33,0x39,0x39,0x33,0x38,0x30,0x35,0x30,0x35,0x30,
    0x38,0x34,0x39,0x39,0x31,0x34,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x2c,
    0x20,0x73,0x52,0x47,0x42,0x20,0x3c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,
    0x2e,0x30,0x34,0x30,0x34,0x34,0x39,0x39,0x39,0x39,0x32,0x37,0x32,0x38,0x32,0x33,
    0x33,0x33,0x33,0x37,0x34,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x29,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x44,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,
    0x6f,0x6e,0x47,0x47,0x58,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x68,0x61,0x6c,0x66,0x56,0x65,0x63,0x2c,
    0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x26,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,0x20,
    0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x68,0x61,0x6c,0x66,0x56,0x65,0x63,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x5f,0x34,0x36,0x20,
    0x2a,0x20,0x5f,0x34,0x36,0x2c,0x20,0x66,0x6d,0x61,0x28,0x72,0x6f,0x75,0x67,0x68,
    0x6e,0x65,0x73,0x73,0x2c,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,
    0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x72,0x6f,0x75,0x67,0x68,0x6e,
    0x65,0x73,0x73,0x20,0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,
    0x20,0x2f,0x20,0x28,0x28,0x33,0x2e,0x31,0x34,0x31,0x35,0x39,0x32,0x37,0x34,0x31,
    0x30,0x31,0x32,0x35,0x37,0x33,0x32,0x34,0x32,0x31,0x38,0x37,0x35,0x20,0x2a,0x20,
    0x5f,0x35,0x39,0x29,0x20,0x2a,0x20,0x5f,0x35,0x39,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,
    0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,0x6c,0x69,
    0x63,0x6b,0x47,0x47,0x58,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x44,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,0x65,0x77,0x2c,0x20,
    0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x26,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x44,0x6f,0x74,0x4c,0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,0x65,0x77,
    0x20,0x2f,0x20,0x66,0x6d,0x61,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x44,0x6f,0x74,
    0x4c,0x69,0x67,0x68,0x74,0x4f,0x72,0x56,0x69,0x65,0x77,0x2c,0x20,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,
    0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x6d,0x69,0x74,0x68,0x28,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x26,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x56,0x65,0x63,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x72,0x6f,0x75,0x67,
    0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,
    0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x64,0x6f,
    0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x56,
    0x65,0x63,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x72,
    0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x63,0x68,
    0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,0x2a,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,
    0x72,0x79,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x6f,0x6d,0x4c,0x69,0x6e,0x65,0x61,
    0x72,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,
    0x65,0x6c,0x65,0x63,0x74,0x28,0x66,0x6d,0x61,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x31,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x34,0x37,0x35,0x34,0x37,0x39,
    0x31,0x32,0x35,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x2c,0x20,0x70,0x6f,0x77,
    0x28,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x30,0x2e,0x34,0x31,0x36,0x36,0x36,0x36,0x36,0x35,0x36,0x37,0x33,
    0x32,0x35,0x35,0x39,0x32,0x30,0x34,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x29,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x2d,0x30,0x2e,0x30,0x35,0x34,0x39,
    0x39,0x39,0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,0x36,0x37,0x37,0x36,0x31,0x32,
    0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x29,0x29,0x2c,0x20,0x6c,0x69,0x6e,0x65,0x61,
    0x72,0x52,0x47,0x42,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x31,0x32,
    0x2e,0x39,0x32,0x30,0x30,0x30,0x30,0x30,0x37,0x36,0x32,0x39,0x33,0x39,0x34,0x35,
    0x33,0x31,0x32,0x35,0x29,0x2c,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x52,0x47,0x42,
    0x20,0x3c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,0x2e,0x30,0x30,0x33,0x31,
    0x33,0x30,0x38,0x30,0x30,0x30,0x39,0x30,0x37,0x33,0x30,0x31,0x39,0x30,0x32,0x37,
    0x37,0x30,0x39,0x39,0x36,0x30,0x39,0x33,0x37,0x35,0x29,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x70,0x62,0x72,
    0x5f,0x46,0x72,0x61,0x67,0x50,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x32,
    0x30,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,
    0x3e,0x20,0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,0x78,0x74,0x75,
    0x72,0x65,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,
    0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x3e,0x20,0x70,0x62,0x72,0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x31,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,
    0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,0x6f,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x70,0x62,0x72,0x52,0x6f,0x75,0x67,
    0x68,0x6e,0x65,0x73,0x73,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x5b,0x5b,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x31,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x70,0x62,0x72,0x41,0x6c,0x62,
    0x65,0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x28,0x70,0x62,0x72,0x41,0x6c,0x62,0x65,0x64,0x6f,0x53,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,
    0x65,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x32,0x30,0x38,0x20,0x3d,0x20,0x70,0x62,0x72,0x52,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x28,0x70,0x62,0x72,0x52,0x6f,0x75,0x67,0x68,0x6e,0x65,
    0x73,0x73,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x72,
    0x61,0x67,0x53,0x61,0x6d,0x70,0x6c,0x65,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x31,0x20,0x3d,
    0x20,0x5f,0x32,0x30,0x38,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x32,0x31,0x36,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,0x66,0x72,
    0x61,0x67,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x33,0x30,0x20,0x3d,0x20,0x66,0x61,0x73,
    0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x32,
    0x30,0x2e,0x6c,0x69,0x67,0x68,0x74,0x50,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x20,0x2d,
    0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x20,0x3d,0x20,0x28,0x5f,0x32,0x31,0x36,0x20,0x2b,0x20,0x5f,0x32,0x33,0x30,0x29,
    0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x35,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x5f,0x32,0x31,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x30,0x20,0x3d,0x20,0x5f,0x32,0x31,0x31,0x20,
    0x2b,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x32,0x30,0x2e,0x63,0x61,0x6d,0x65,
    0x72,0x61,0x50,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x69,0x6e,0x2e,0x66,
    0x72,0x61,0x67,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,
    0x20,0x3d,0x20,0x5f,0x32,0x33,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x28,0x5f,0x32,
    0x36,0x30,0x20,0x2a,0x20,0x5f,0x32,0x36,0x30,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,
    0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x38,0x34,0x20,0x3d,0x20,0x44,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,
    0x6e,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x20,
    0x2b,0x20,0x47,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x53,0x6d,0x69,0x74,0x68,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x32,0x32,
    0x30,0x2e,0x74,0x69,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x28,0x28,
    0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,
    0x29,0x20,0x2a,0x20,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x29,0x20,0x2a,0x20,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x29,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x5f,0x32,0x38,0x34,0x2c,0x20,0x5f,0x32,0x38,0x34,0x2c,0x20,0x5f,
    0x32,0x38,0x34,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x66,0x72,0x6f,0x6d,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
const sg_shader_desc* pbr_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vertex_shader_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fragment_shader_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "position";
            desc.attrs[1].glsl_name = "normal";
            desc.attrs[2].glsl_name = "texCoord0";
            desc.attrs[3].glsl_name = "color0";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 12;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "pbr_VertParams";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 48;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 3;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "pbr_FragParams";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[3].image_type = SG_IMAGETYPE_2D;
            desc.images[3].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[3].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[3].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "pbrAlbedoTexture_pbrAlbedoSampler";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 3;
            desc.image_sampler_pairs[1].sampler_slot = 3;
            desc.image_sampler_pairs[1].glsl_name = "pbrRoughnessTexture_pbrRoughnessSampler";
            desc.label = "pbr_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vertex_shader_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fragment_shader_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.attrs[2].hlsl_sem_name = "TEXCOORD";
            desc.attrs[2].hlsl_sem_index = 2;
            desc.attrs[3].hlsl_sem_name = "TEXCOORD";
            desc.attrs[3].hlsl_sem_index = 3;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 48;
            desc.uniform_blocks[1].hlsl_register_b_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].hlsl_register_t_n = 0;
            desc.images[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[3].image_type = SG_IMAGETYPE_2D;
            desc.images[3].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[3].multisampled = false;
            desc.images[3].hlsl_register_t_n = 1;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].hlsl_register_s_n = 0;
            desc.samplers[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[3].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[3].hlsl_register_s_n = 1;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 3;
            desc.image_sampler_pairs[1].sampler_slot = 3;
            desc.label = "pbr_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_MACOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vertex_shader_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = (const char*)fragment_shader_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 48;
            desc.uniform_blocks[1].msl_buffer_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].msl_texture_n = 0;
            desc.images[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[3].image_type = SG_IMAGETYPE_2D;
            desc.images[3].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[3].multisampled = false;
            desc.images[3].msl_texture_n = 1;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].msl_sampler_n = 0;
            desc.samplers[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[3].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[3].msl_sampler_n = 1;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 3;
            desc.image_sampler_pairs[1].sampler_slot = 3;
            desc.label = "pbr_shader";
        }
        return &desc;
    }
    return 0;
}
#endif // SOKOL_SHDC_IMPL

//NOTE: These lines were added by find_and_compile_shaders.py
//NOTE: Because an empty array is invalid in C, we always add at least one dummy entry to these definition #defines while the corresponding COUNT #define will remain 0
#ifndef NO_ENTRIES_STR
#define NO_ENTRIES_STR "no_entries"
#endif
#define pbr_SHADER_FILE_PATH "C:\\gamedev\\projects\\SokolPbrRenderer\\app\\pbr_shader.glsl"
#define pbr_SHADER_IMAGE_COUNT 2
#define pbr_SHADER_IMAGE_DEFS { \
	{ .name="pbrAlbedoTexture", .index=IMG_pbrAlbedoTexture }, \
	{ .name="pbrRoughnessTexture", .index=IMG_pbrRoughnessTexture }, \
} // These should match ShaderImageDef struct found in gfx_shader.h
#define pbr_SHADER_SAMPLER_COUNT 2
#define pbr_SHADER_SAMPLER_DEFS { \
	{ .name="pbrAlbedoSampler", .index=SMP_pbrAlbedoSampler }, \
	{ .name="pbrRoughnessSampler", .index=SMP_pbrRoughnessSampler }, \
} // These should match ShaderSamplerDef struct found in gfx_shader.h
#define pbr_SHADER_UNIFORM_COUNT 6
#define pbr_SHADER_UNIFORM_DEFS { \
	{ .name="world", .blockIndex=UB_pbr_VertParams, .offset=STRUCT_VAR_OFFSET(pbr_VertParams_t, world), .size=STRUCT_VAR_SIZE(pbr_VertParams_t, world) }, \
	{ .name="view", .blockIndex=UB_pbr_VertParams, .offset=STRUCT_VAR_OFFSET(pbr_VertParams_t, view), .size=STRUCT_VAR_SIZE(pbr_VertParams_t, view) }, \
	{ .name="projection", .blockIndex=UB_pbr_VertParams, .offset=STRUCT_VAR_OFFSET(pbr_VertParams_t, projection), .size=STRUCT_VAR_SIZE(pbr_VertParams_t, projection) }, \
	{ .name="tint", .blockIndex=UB_pbr_FragParams, .offset=STRUCT_VAR_OFFSET(pbr_FragParams_t, tint), .size=STRUCT_VAR_SIZE(pbr_FragParams_t, tint) }, \
	{ .name="lightPos", .blockIndex=UB_pbr_FragParams, .offset=STRUCT_VAR_OFFSET(pbr_FragParams_t, lightPos), .size=STRUCT_VAR_SIZE(pbr_FragParams_t, lightPos) }, \
	{ .name="cameraPos", .blockIndex=UB_pbr_FragParams, .offset=STRUCT_VAR_OFFSET(pbr_FragParams_t, cameraPos), .size=STRUCT_VAR_SIZE(pbr_FragParams_t, cameraPos) }, \
} // These should match ShaderUniformDef struct found in gfx_shader.h
#define pbr_SHADER_ATTR_COUNT 4
#define pbr_SHADER_ATTR_DEFS { \
	{ .name="position", .index=ATTR_pbr_position }, \
	{ .name="normal", .index=ATTR_pbr_normal }, \
	{ .name="texCoord0", .index=ATTR_pbr_texCoord0 }, \
	{ .name="color0", .index=ATTR_pbr_color0 }, \
} // These should match ShaderAttributeDef struct found in gfx_shader.h
